window.jest_html_reporters_callback__({"numFailedTestSuites":5,"numFailedTests":18,"numPassedTestSuites":3,"numPassedTests":32,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":8,"numTotalTests":50,"startTime":1738598158170,"success":false,"testResults":[{"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1738598161992,"runtime":3434,"slow":false,"start":1738598158558},"testFilePath":"C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia\\__tests__\\get-user-refresh.js","failureMessage":null,"testResults":[{"ancestorTitles":["GET USER REFRESH"],"duration":1292,"failureMessages":[],"fullName":"GET USER REFRESH P user refresh success.js ","status":"passed","title":"P user refresh success.js "}]},{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1738598163486,"runtime":4893,"slow":false,"start":1738598158593},"testFilePath":"C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia\\__tests__\\post-user-forgot-password.js","failureMessage":null,"testResults":[{"ancestorTitles":["POST USER FORGET PASSWORD"],"duration":1128,"failureMessages":[],"fullName":"POST USER FORGET PASSWORD N, body email empty.js","status":"passed","title":"N, body email empty.js"},{"ancestorTitles":["POST USER FORGET PASSWORD"],"duration":763,"failureMessages":[],"fullName":"POST USER FORGET PASSWORD N, body email invalid.js","status":"passed","title":"N, body email invalid.js"},{"ancestorTitles":["POST USER FORGET PASSWORD"],"duration":868,"failureMessages":[],"fullName":"POST USER FORGET PASSWORD P forgot password success.js","status":"passed","title":"P forgot password success.js"}]},{"numFailingTests":1,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1738598163696,"runtime":5154,"slow":true,"start":1738598158542},"testFilePath":"C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia\\__tests__\\get-user-me.js","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mGET USER ME › P get user me success.js \u001b[39m\u001b[22m\n\n    Custom message:\n      {\"message\":\"Unauthorized\"}\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m200\u001b[39m\n    Received: \u001b[31m401\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  7 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m  8 |\u001b[39m     verifyResponse(actual\u001b[33m,\u001b[39m expected) {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m  9 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mstatusCode\u001b[33m,\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mstringify(actual\u001b[33m.\u001b[39mbody))\u001b[33m.\u001b[39mtoEqual(expected\u001b[33m.\u001b[39mstatus_code)\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                                                \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mbody)\u001b[33m.\u001b[39mtoMatchObject(expected\u001b[33m.\u001b[39mbody)\u001b[22m\n\u001b[2m     \u001b[90m 11 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mbody)\u001b[33m.\u001b[39mtoMatchSchema(expected\u001b[33m.\u001b[39mjson_schema)\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m     }\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Verifier.toEqual [as verifyResponse] (\u001b[22m\u001b[2mutilities/verifier.js\u001b[2m:9:64)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat verifyResponse (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/get-user-me.js\u001b[39m\u001b[0m\u001b[2m:17:22)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["GET USER ME"],"duration":1166,"failureMessages":[],"fullName":"GET USER ME N, header, token empty.js ","status":"passed","title":"N, header, token empty.js "},{"ancestorTitles":["GET USER ME"],"duration":817,"failureMessages":[],"fullName":"GET USER ME N, header, token invalid.js ","status":"passed","title":"N, header, token invalid.js "},{"ancestorTitles":["GET USER ME"],"duration":981,"failureMessages":["Error: Custom message:\n  {\"message\":\"Unauthorized\"}\n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m401\u001b[39m\n    at Verifier.toEqual [as verifyResponse] (C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia\\utilities\\verifier.js:9:64)\n    at verifyResponse (C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia\\__tests__\\get-user-me.js:17:22)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"GET USER ME P get user me success.js ","status":"failed","title":"P get user me success.js "}]},{"numFailingTests":3,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1738598164343,"runtime":5730,"slow":true,"start":1738598158613},"testFilePath":"C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia\\__tests__\\post-user-change-password.js","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPOST USER CHANGE PASSWORD › N, body, new_password empty .js\u001b[39m\u001b[22m\n\n    Custom message:\n      {\"message\":\"Unauthorized\"}\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m422\u001b[39m\n    Received: \u001b[31m401\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  7 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m  8 |\u001b[39m     verifyResponse(actual\u001b[33m,\u001b[39m expected) {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m  9 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mstatusCode\u001b[33m,\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mstringify(actual\u001b[33m.\u001b[39mbody))\u001b[33m.\u001b[39mtoEqual(expected\u001b[33m.\u001b[39mstatus_code)\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                                                \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mbody)\u001b[33m.\u001b[39mtoMatchObject(expected\u001b[33m.\u001b[39mbody)\u001b[22m\n\u001b[2m     \u001b[90m 11 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mbody)\u001b[33m.\u001b[39mtoMatchSchema(expected\u001b[33m.\u001b[39mjson_schema)\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m     }\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Verifier.toEqual [as verifyResponse] (\u001b[22m\u001b[2mutilities/verifier.js\u001b[2m:9:64)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat verifyResponse (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/post-user-change-password.js\u001b[39m\u001b[0m\u001b[2m:18:22)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPOST USER CHANGE PASSWORD › N, body, new_password_confirmation empty .js\u001b[39m\u001b[22m\n\n    Custom message:\n      {\"message\":\"Unauthorized\"}\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m422\u001b[39m\n    Received: \u001b[31m401\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  7 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m  8 |\u001b[39m     verifyResponse(actual\u001b[33m,\u001b[39m expected) {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m  9 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mstatusCode\u001b[33m,\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mstringify(actual\u001b[33m.\u001b[39mbody))\u001b[33m.\u001b[39mtoEqual(expected\u001b[33m.\u001b[39mstatus_code)\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                                                \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mbody)\u001b[33m.\u001b[39mtoMatchObject(expected\u001b[33m.\u001b[39mbody)\u001b[22m\n\u001b[2m     \u001b[90m 11 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mbody)\u001b[33m.\u001b[39mtoMatchSchema(expected\u001b[33m.\u001b[39mjson_schema)\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m     }\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Verifier.toEqual [as verifyResponse] (\u001b[22m\u001b[2mutilities/verifier.js\u001b[2m:9:64)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat verifyResponse (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/post-user-change-password.js\u001b[39m\u001b[0m\u001b[2m:18:22)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPOST USER CHANGE PASSWORD › P change password success.js\u001b[39m\u001b[22m\n\n    Custom message:\n      {\"message\":\"Unauthorized\"}\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m200\u001b[39m\n    Received: \u001b[31m401\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  7 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m  8 |\u001b[39m     verifyResponse(actual\u001b[33m,\u001b[39m expected) {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m  9 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mstatusCode\u001b[33m,\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mstringify(actual\u001b[33m.\u001b[39mbody))\u001b[33m.\u001b[39mtoEqual(expected\u001b[33m.\u001b[39mstatus_code)\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                                                \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mbody)\u001b[33m.\u001b[39mtoMatchObject(expected\u001b[33m.\u001b[39mbody)\u001b[22m\n\u001b[2m     \u001b[90m 11 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mbody)\u001b[33m.\u001b[39mtoMatchSchema(expected\u001b[33m.\u001b[39mjson_schema)\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m     }\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Verifier.toEqual [as verifyResponse] (\u001b[22m\u001b[2mutilities/verifier.js\u001b[2m:9:64)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat verifyResponse (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/post-user-change-password.js\u001b[39m\u001b[0m\u001b[2m:18:22)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["POST USER CHANGE PASSWORD"],"duration":1321,"failureMessages":[],"fullName":"POST USER CHANGE PASSWORD N, body, current_password invalid.js","status":"passed","title":"N, body, current_password invalid.js"},{"ancestorTitles":["POST USER CHANGE PASSWORD"],"duration":730,"failureMessages":["Error: Custom message:\n  {\"message\":\"Unauthorized\"}\n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m422\u001b[39m\nReceived: \u001b[31m401\u001b[39m\n    at Verifier.toEqual [as verifyResponse] (C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia\\utilities\\verifier.js:9:64)\n    at verifyResponse (C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia\\__tests__\\post-user-change-password.js:18:22)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"POST USER CHANGE PASSWORD N, body, new_password empty .js","status":"failed","title":"N, body, new_password empty .js"},{"ancestorTitles":["POST USER CHANGE PASSWORD"],"duration":708,"failureMessages":["Error: Custom message:\n  {\"message\":\"Unauthorized\"}\n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m422\u001b[39m\nReceived: \u001b[31m401\u001b[39m\n    at Verifier.toEqual [as verifyResponse] (C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia\\utilities\\verifier.js:9:64)\n    at verifyResponse (C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia\\__tests__\\post-user-change-password.js:18:22)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"POST USER CHANGE PASSWORD N, body, new_password_confirmation empty .js","status":"failed","title":"N, body, new_password_confirmation empty .js"},{"ancestorTitles":["POST USER CHANGE PASSWORD"],"duration":786,"failureMessages":["Error: Custom message:\n  {\"message\":\"Unauthorized\"}\n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m401\u001b[39m\n    at Verifier.toEqual [as verifyResponse] (C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia\\utilities\\verifier.js:9:64)\n    at verifyResponse (C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia\\__tests__\\post-user-change-password.js:18:22)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"POST USER CHANGE PASSWORD P change password success.js","status":"failed","title":"P change password success.js"}]},{"numFailingTests":1,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1738598165465,"runtime":6935,"slow":true,"start":1738598158530},"testFilePath":"C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia\\__tests__\\get-user-logout.js","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mGET USER LOGOUT › P user logout success.js \u001b[39m\u001b[22m\n\n    Custom message:\n      {\"message\":\"Unauthorized\"}\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m200\u001b[39m\n    Received: \u001b[31m401\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  7 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m  8 |\u001b[39m     verifyResponse(actual\u001b[33m,\u001b[39m expected) {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m  9 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mstatusCode\u001b[33m,\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mstringify(actual\u001b[33m.\u001b[39mbody))\u001b[33m.\u001b[39mtoEqual(expected\u001b[33m.\u001b[39mstatus_code)\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                                                \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mbody)\u001b[33m.\u001b[39mtoMatchObject(expected\u001b[33m.\u001b[39mbody)\u001b[22m\n\u001b[2m     \u001b[90m 11 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mbody)\u001b[33m.\u001b[39mtoMatchSchema(expected\u001b[33m.\u001b[39mjson_schema)\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m     }\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Verifier.toEqual [as verifyResponse] (\u001b[22m\u001b[2mutilities/verifier.js\u001b[2m:9:64)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat verifyResponse (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/get-user-logout.js\u001b[39m\u001b[0m\u001b[2m:17:22)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["GET USER LOGOUT"],"duration":2092,"failureMessages":[],"fullName":"GET USER LOGOUT N, header token empty.js ","status":"passed","title":"N, header token empty.js "},{"ancestorTitles":["GET USER LOGOUT"],"duration":987,"failureMessages":[],"fullName":"GET USER LOGOUT N, header token invalid.js ","status":"passed","title":"N, header token invalid.js "},{"ancestorTitles":["GET USER LOGOUT"],"duration":1620,"failureMessages":["Error: Custom message:\n  {\"message\":\"Unauthorized\"}\n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m401\u001b[39m\n    at Verifier.toEqual [as verifyResponse] (C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia\\utilities\\verifier.js:9:64)\n    at verifyResponse (C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia\\__tests__\\get-user-logout.js:17:22)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"GET USER LOGOUT P user logout success.js ","status":"failed","title":"P user logout success.js "}]},{"numFailingTests":0,"numPassingTests":5,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1738598174267,"runtime":15627,"slow":true,"start":1738598158640},"testFilePath":"C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia\\__tests__\\post-user-login.js","failureMessage":null,"testResults":[{"ancestorTitles":["POST USER LOGIN"],"duration":2079,"failureMessages":[],"fullName":"POST USER LOGIN N, body, email empty.js ","status":"passed","title":"N, body, email empty.js "},{"ancestorTitles":["POST USER LOGIN"],"duration":1644,"failureMessages":[],"fullName":"POST USER LOGIN N, body, email invalid.js ","status":"passed","title":"N, body, email invalid.js "},{"ancestorTitles":["POST USER LOGIN"],"duration":1865,"failureMessages":[],"fullName":"POST USER LOGIN N, body, password empty.js ","status":"passed","title":"N, body, password empty.js "},{"ancestorTitles":["POST USER LOGIN"],"duration":5169,"failureMessages":[],"fullName":"POST USER LOGIN N, body, password invalid.js ","status":"passed","title":"N, body, password invalid.js "},{"ancestorTitles":["POST USER LOGIN"],"duration":2643,"failureMessages":[],"fullName":"POST USER LOGIN P user login success.js ","status":"passed","title":"P user login success.js "}]},{"numFailingTests":6,"numPassingTests":7,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1738598174704,"runtime":12697,"slow":true,"start":1738598162007},"testFilePath":"C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia\\__tests__\\post-user-register.js","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPOST USER REGISTER › N, body, address empty.js \u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatchObject\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    \u001b[32m- Expected  - 1\u001b[39m\n    \u001b[31m+ Received  + 1\u001b[39m\n\n    \u001b[2m  Object {\u001b[22m\n    \u001b[2m    \"address\": Array [\u001b[22m\n    \u001b[32m-     \"The address field is required.\",\u001b[39m\n    \u001b[31m+     \"The address field must be a string.\",\u001b[39m\n    \u001b[2m    ],\u001b[22m\n    \u001b[2m  }\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  8 |\u001b[39m     verifyResponse(actual\u001b[33m,\u001b[39m expected) {\u001b[22m\n\u001b[2m     \u001b[90m  9 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mstatusCode\u001b[33m,\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mstringify(actual\u001b[33m.\u001b[39mbody))\u001b[33m.\u001b[39mtoEqual(expected\u001b[33m.\u001b[39mstatus_code)\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 10 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mbody)\u001b[33m.\u001b[39mtoMatchObject(expected\u001b[33m.\u001b[39mbody)\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 11 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mbody)\u001b[33m.\u001b[39mtoMatchSchema(expected\u001b[33m.\u001b[39mjson_schema)\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m     }\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m }\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Verifier.toMatchObject [as verifyResponse] (\u001b[22m\u001b[2mutilities/verifier.js\u001b[2m:10:29)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat verifyResponse (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/post-user-register.js\u001b[39m\u001b[0m\u001b[2m:23:22)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPOST USER REGISTER › N, body, city empty.js \u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatchObject\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    \u001b[32m- Expected  - 1\u001b[39m\n    \u001b[31m+ Received  + 1\u001b[39m\n\n    \u001b[2m  Object {\u001b[22m\n    \u001b[2m    \"city\": Array [\u001b[22m\n    \u001b[32m-     \"The city field is required.\",\u001b[39m\n    \u001b[31m+     \"The city field must be a string.\",\u001b[39m\n    \u001b[2m    ],\u001b[22m\n    \u001b[2m  }\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  8 |\u001b[39m     verifyResponse(actual\u001b[33m,\u001b[39m expected) {\u001b[22m\n\u001b[2m     \u001b[90m  9 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mstatusCode\u001b[33m,\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mstringify(actual\u001b[33m.\u001b[39mbody))\u001b[33m.\u001b[39mtoEqual(expected\u001b[33m.\u001b[39mstatus_code)\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 10 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mbody)\u001b[33m.\u001b[39mtoMatchObject(expected\u001b[33m.\u001b[39mbody)\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 11 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mbody)\u001b[33m.\u001b[39mtoMatchSchema(expected\u001b[33m.\u001b[39mjson_schema)\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m     }\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m }\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Verifier.toMatchObject [as verifyResponse] (\u001b[22m\u001b[2mutilities/verifier.js\u001b[2m:10:29)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat verifyResponse (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/post-user-register.js\u001b[39m\u001b[0m\u001b[2m:23:22)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPOST USER REGISTER › N, body, country empty .js \u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatchObject\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    \u001b[32m- Expected  - 1\u001b[39m\n    \u001b[31m+ Received  + 1\u001b[39m\n\n    \u001b[2m  Object {\u001b[22m\n    \u001b[2m    \"country\": Array [\u001b[22m\n    \u001b[32m-     \"The country field is required.\",\u001b[39m\n    \u001b[31m+     \"The country field must be a string.\",\u001b[39m\n    \u001b[2m    ],\u001b[22m\n    \u001b[2m  }\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  8 |\u001b[39m     verifyResponse(actual\u001b[33m,\u001b[39m expected) {\u001b[22m\n\u001b[2m     \u001b[90m  9 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mstatusCode\u001b[33m,\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mstringify(actual\u001b[33m.\u001b[39mbody))\u001b[33m.\u001b[39mtoEqual(expected\u001b[33m.\u001b[39mstatus_code)\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 10 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mbody)\u001b[33m.\u001b[39mtoMatchObject(expected\u001b[33m.\u001b[39mbody)\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 11 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mbody)\u001b[33m.\u001b[39mtoMatchSchema(expected\u001b[33m.\u001b[39mjson_schema)\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m     }\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m }\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Verifier.toMatchObject [as verifyResponse] (\u001b[22m\u001b[2mutilities/verifier.js\u001b[2m:10:29)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat verifyResponse (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/post-user-register.js\u001b[39m\u001b[0m\u001b[2m:23:22)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPOST USER REGISTER › N, body, phone empty.js \u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatchObject\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    \u001b[32m- Expected  - 1\u001b[39m\n    \u001b[31m+ Received  + 1\u001b[39m\n\n    \u001b[2m  Object {\u001b[22m\n    \u001b[2m    \"phone\": Array [\u001b[22m\n    \u001b[32m-     \"The phone field is required.\",\u001b[39m\n    \u001b[31m+     \"The phone field must be a string.\",\u001b[39m\n    \u001b[2m    ],\u001b[22m\n    \u001b[2m  }\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  8 |\u001b[39m     verifyResponse(actual\u001b[33m,\u001b[39m expected) {\u001b[22m\n\u001b[2m     \u001b[90m  9 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mstatusCode\u001b[33m,\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mstringify(actual\u001b[33m.\u001b[39mbody))\u001b[33m.\u001b[39mtoEqual(expected\u001b[33m.\u001b[39mstatus_code)\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 10 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mbody)\u001b[33m.\u001b[39mtoMatchObject(expected\u001b[33m.\u001b[39mbody)\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 11 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mbody)\u001b[33m.\u001b[39mtoMatchSchema(expected\u001b[33m.\u001b[39mjson_schema)\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m     }\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m }\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Verifier.toMatchObject [as verifyResponse] (\u001b[22m\u001b[2mutilities/verifier.js\u001b[2m:10:29)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat verifyResponse (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/post-user-register.js\u001b[39m\u001b[0m\u001b[2m:23:22)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPOST USER REGISTER › N, body, postcode empty.js \u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatchObject\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    \u001b[32m- Expected  - 1\u001b[39m\n    \u001b[31m+ Received  + 1\u001b[39m\n\n    \u001b[2m  Object {\u001b[22m\n    \u001b[2m    \"postcode\": Array [\u001b[22m\n    \u001b[32m-     \"The postcode field is required.\",\u001b[39m\n    \u001b[31m+     \"The postcode field must be a string.\",\u001b[39m\n    \u001b[2m    ],\u001b[22m\n    \u001b[2m  }\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  8 |\u001b[39m     verifyResponse(actual\u001b[33m,\u001b[39m expected) {\u001b[22m\n\u001b[2m     \u001b[90m  9 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mstatusCode\u001b[33m,\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mstringify(actual\u001b[33m.\u001b[39mbody))\u001b[33m.\u001b[39mtoEqual(expected\u001b[33m.\u001b[39mstatus_code)\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 10 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mbody)\u001b[33m.\u001b[39mtoMatchObject(expected\u001b[33m.\u001b[39mbody)\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 11 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mbody)\u001b[33m.\u001b[39mtoMatchSchema(expected\u001b[33m.\u001b[39mjson_schema)\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m     }\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m }\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Verifier.toMatchObject [as verifyResponse] (\u001b[22m\u001b[2mutilities/verifier.js\u001b[2m:10:29)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat verifyResponse (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/post-user-register.js\u001b[39m\u001b[0m\u001b[2m:23:22)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPOST USER REGISTER › N, body, state empty.js \u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatchObject\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    \u001b[32m- Expected  - 1\u001b[39m\n    \u001b[31m+ Received  + 1\u001b[39m\n\n    \u001b[2m  Object {\u001b[22m\n    \u001b[2m    \"state\": Array [\u001b[22m\n    \u001b[32m-     \"The state field is required.\",\u001b[39m\n    \u001b[31m+     \"The state field must be a string.\",\u001b[39m\n    \u001b[2m    ],\u001b[22m\n    \u001b[2m  }\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  8 |\u001b[39m     verifyResponse(actual\u001b[33m,\u001b[39m expected) {\u001b[22m\n\u001b[2m     \u001b[90m  9 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mstatusCode\u001b[33m,\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mstringify(actual\u001b[33m.\u001b[39mbody))\u001b[33m.\u001b[39mtoEqual(expected\u001b[33m.\u001b[39mstatus_code)\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 10 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mbody)\u001b[33m.\u001b[39mtoMatchObject(expected\u001b[33m.\u001b[39mbody)\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 11 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mbody)\u001b[33m.\u001b[39mtoMatchSchema(expected\u001b[33m.\u001b[39mjson_schema)\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m     }\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m }\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Verifier.toMatchObject [as verifyResponse] (\u001b[22m\u001b[2mutilities/verifier.js\u001b[2m:10:29)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat verifyResponse (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/post-user-register.js\u001b[39m\u001b[0m\u001b[2m:23:22)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["POST USER REGISTER"],"duration":798,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatchObject\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 1\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"address\": Array [\u001b[22m\n\u001b[32m-     \"The address field is required.\",\u001b[39m\n\u001b[31m+     \"The address field must be a string.\",\u001b[39m\n\u001b[2m    ],\u001b[22m\n\u001b[2m  }\u001b[22m\n    at Verifier.toMatchObject [as verifyResponse] (C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia\\utilities\\verifier.js:10:29)\n    at verifyResponse (C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia\\__tests__\\post-user-register.js:23:22)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"POST USER REGISTER N, body, address empty.js ","status":"failed","title":"N, body, address empty.js "},{"ancestorTitles":["POST USER REGISTER"],"duration":788,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatchObject\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 1\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"city\": Array [\u001b[22m\n\u001b[32m-     \"The city field is required.\",\u001b[39m\n\u001b[31m+     \"The city field must be a string.\",\u001b[39m\n\u001b[2m    ],\u001b[22m\n\u001b[2m  }\u001b[22m\n    at Verifier.toMatchObject [as verifyResponse] (C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia\\utilities\\verifier.js:10:29)\n    at verifyResponse (C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia\\__tests__\\post-user-register.js:23:22)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"POST USER REGISTER N, body, city empty.js ","status":"failed","title":"N, body, city empty.js "},{"ancestorTitles":["POST USER REGISTER"],"duration":1746,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatchObject\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 1\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"country\": Array [\u001b[22m\n\u001b[32m-     \"The country field is required.\",\u001b[39m\n\u001b[31m+     \"The country field must be a string.\",\u001b[39m\n\u001b[2m    ],\u001b[22m\n\u001b[2m  }\u001b[22m\n    at Verifier.toMatchObject [as verifyResponse] (C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia\\utilities\\verifier.js:10:29)\n    at verifyResponse (C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia\\__tests__\\post-user-register.js:23:22)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"POST USER REGISTER N, body, country empty .js ","status":"failed","title":"N, body, country empty .js "},{"ancestorTitles":["POST USER REGISTER"],"duration":1045,"failureMessages":[],"fullName":"POST USER REGISTER N, body, dob empty.js ","status":"passed","title":"N, body, dob empty.js "},{"ancestorTitles":["POST USER REGISTER"],"duration":772,"failureMessages":[],"fullName":"POST USER REGISTER N, body, email empty.js ","status":"passed","title":"N, body, email empty.js "},{"ancestorTitles":["POST USER REGISTER"],"duration":810,"failureMessages":[],"fullName":"POST USER REGISTER N, body, first name empty.js ","status":"passed","title":"N, body, first name empty.js "},{"ancestorTitles":["POST USER REGISTER"],"duration":780,"failureMessages":[],"fullName":"POST USER REGISTER N, body, last name empty.js ","status":"passed","title":"N, body, last name empty.js "},{"ancestorTitles":["POST USER REGISTER"],"duration":701,"failureMessages":[],"fullName":"POST USER REGISTER N, body, password  with the wrong format.js ","status":"passed","title":"N, body, password  with the wrong format.js "},{"ancestorTitles":["POST USER REGISTER"],"duration":736,"failureMessages":[],"fullName":"POST USER REGISTER N, body, password empty.js ","status":"passed","title":"N, body, password empty.js "},{"ancestorTitles":["POST USER REGISTER"],"duration":1751,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatchObject\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 1\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"phone\": Array [\u001b[22m\n\u001b[32m-     \"The phone field is required.\",\u001b[39m\n\u001b[31m+     \"The phone field must be a string.\",\u001b[39m\n\u001b[2m    ],\u001b[22m\n\u001b[2m  }\u001b[22m\n    at Verifier.toMatchObject [as verifyResponse] (C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia\\utilities\\verifier.js:10:29)\n    at verifyResponse (C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia\\__tests__\\post-user-register.js:23:22)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"POST USER REGISTER N, body, phone empty.js ","status":"failed","title":"N, body, phone empty.js "},{"ancestorTitles":["POST USER REGISTER"],"duration":814,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatchObject\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 1\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"postcode\": Array [\u001b[22m\n\u001b[32m-     \"The postcode field is required.\",\u001b[39m\n\u001b[31m+     \"The postcode field must be a string.\",\u001b[39m\n\u001b[2m    ],\u001b[22m\n\u001b[2m  }\u001b[22m\n    at Verifier.toMatchObject [as verifyResponse] (C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia\\utilities\\verifier.js:10:29)\n    at verifyResponse (C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia\\__tests__\\post-user-register.js:23:22)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"POST USER REGISTER N, body, postcode empty.js ","status":"failed","title":"N, body, postcode empty.js "},{"ancestorTitles":["POST USER REGISTER"],"duration":767,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatchObject\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 1\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"state\": Array [\u001b[22m\n\u001b[32m-     \"The state field is required.\",\u001b[39m\n\u001b[31m+     \"The state field must be a string.\",\u001b[39m\n\u001b[2m    ],\u001b[22m\n\u001b[2m  }\u001b[22m\n    at Verifier.toMatchObject [as verifyResponse] (C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia\\utilities\\verifier.js:10:29)\n    at verifyResponse (C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia\\__tests__\\post-user-register.js:23:22)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"POST USER REGISTER N, body, state empty.js ","status":"failed","title":"N, body, state empty.js "},{"ancestorTitles":["POST USER REGISTER"],"duration":894,"failureMessages":[],"fullName":"POST USER REGISTER P, user register success.js ","status":"passed","title":"P, user register success.js "}]},{"numFailingTests":7,"numPassingTests":11,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1738598214735,"runtime":56142,"slow":true,"start":1738598158593},"testFilePath":"C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia\\__tests__\\patch-user-id.js","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPatch User Id › Test N, body, address empty.js \u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatchObject\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    \u001b[32m- Expected  - 1\u001b[39m\n    \u001b[31m+ Received  + 1\u001b[39m\n\n    \u001b[2m  Object {\u001b[22m\n    \u001b[2m    \"address\": Array [\u001b[22m\n    \u001b[32m-     \"The address field is required.\",\u001b[39m\n    \u001b[31m+     \"The address field must be a string.\",\u001b[39m\n    \u001b[2m    ],\u001b[22m\n    \u001b[2m  }\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  8 |\u001b[39m     verifyResponse(actual\u001b[33m,\u001b[39m expected) {\u001b[22m\n\u001b[2m     \u001b[90m  9 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mstatusCode\u001b[33m,\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mstringify(actual\u001b[33m.\u001b[39mbody))\u001b[33m.\u001b[39mtoEqual(expected\u001b[33m.\u001b[39mstatus_code)\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 10 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mbody)\u001b[33m.\u001b[39mtoMatchObject(expected\u001b[33m.\u001b[39mbody)\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 11 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mbody)\u001b[33m.\u001b[39mtoMatchSchema(expected\u001b[33m.\u001b[39mjson_schema)\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m     }\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m }\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Verifier.toMatchObject [as verifyResponse] (\u001b[22m\u001b[2mutilities/verifier.js\u001b[2m:10:29)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat verifyResponse (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/patch-user-id.js\u001b[39m\u001b[0m\u001b[2m:50:22)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPatch User Id › Test N, body, city empty.js \u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatchObject\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    \u001b[32m- Expected  - 1\u001b[39m\n    \u001b[31m+ Received  + 1\u001b[39m\n\n    \u001b[2m  Object {\u001b[22m\n    \u001b[2m    \"city\": Array [\u001b[22m\n    \u001b[32m-     \"The city field is required.\",\u001b[39m\n    \u001b[31m+     \"The city field must be a string.\",\u001b[39m\n    \u001b[2m    ],\u001b[22m\n    \u001b[2m  }\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  8 |\u001b[39m     verifyResponse(actual\u001b[33m,\u001b[39m expected) {\u001b[22m\n\u001b[2m     \u001b[90m  9 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mstatusCode\u001b[33m,\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mstringify(actual\u001b[33m.\u001b[39mbody))\u001b[33m.\u001b[39mtoEqual(expected\u001b[33m.\u001b[39mstatus_code)\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 10 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mbody)\u001b[33m.\u001b[39mtoMatchObject(expected\u001b[33m.\u001b[39mbody)\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 11 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mbody)\u001b[33m.\u001b[39mtoMatchSchema(expected\u001b[33m.\u001b[39mjson_schema)\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m     }\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m }\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Verifier.toMatchObject [as verifyResponse] (\u001b[22m\u001b[2mutilities/verifier.js\u001b[2m:10:29)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat verifyResponse (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/patch-user-id.js\u001b[39m\u001b[0m\u001b[2m:50:22)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPatch User Id › Test N, body, country empty.js \u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatchObject\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    \u001b[32m- Expected  - 1\u001b[39m\n    \u001b[31m+ Received  + 1\u001b[39m\n\n    \u001b[2m  Object {\u001b[22m\n    \u001b[2m    \"country\": Array [\u001b[22m\n    \u001b[32m-     \"The country field is required.\",\u001b[39m\n    \u001b[31m+     \"The country field must be a string.\",\u001b[39m\n    \u001b[2m    ],\u001b[22m\n    \u001b[2m  }\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  8 |\u001b[39m     verifyResponse(actual\u001b[33m,\u001b[39m expected) {\u001b[22m\n\u001b[2m     \u001b[90m  9 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mstatusCode\u001b[33m,\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mstringify(actual\u001b[33m.\u001b[39mbody))\u001b[33m.\u001b[39mtoEqual(expected\u001b[33m.\u001b[39mstatus_code)\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 10 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mbody)\u001b[33m.\u001b[39mtoMatchObject(expected\u001b[33m.\u001b[39mbody)\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 11 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mbody)\u001b[33m.\u001b[39mtoMatchSchema(expected\u001b[33m.\u001b[39mjson_schema)\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m     }\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m }\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Verifier.toMatchObject [as verifyResponse] (\u001b[22m\u001b[2mutilities/verifier.js\u001b[2m:10:29)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat verifyResponse (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/patch-user-id.js\u001b[39m\u001b[0m\u001b[2m:50:22)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPatch User Id › Test N, body, email empty.js \u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatchObject\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    \u001b[32m- Expected  - 1\u001b[39m\n    \u001b[31m+ Received  + 1\u001b[39m\n\n    \u001b[2m  Object {\u001b[22m\n    \u001b[2m    \"email\": Array [\u001b[22m\n    \u001b[32m-     \"The email field is required.\",\u001b[39m\n    \u001b[31m+     \"The email field must be a string.\",\u001b[39m\n    \u001b[2m    ],\u001b[22m\n    \u001b[2m  }\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  8 |\u001b[39m     verifyResponse(actual\u001b[33m,\u001b[39m expected) {\u001b[22m\n\u001b[2m     \u001b[90m  9 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mstatusCode\u001b[33m,\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mstringify(actual\u001b[33m.\u001b[39mbody))\u001b[33m.\u001b[39mtoEqual(expected\u001b[33m.\u001b[39mstatus_code)\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 10 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mbody)\u001b[33m.\u001b[39mtoMatchObject(expected\u001b[33m.\u001b[39mbody)\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 11 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mbody)\u001b[33m.\u001b[39mtoMatchSchema(expected\u001b[33m.\u001b[39mjson_schema)\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m     }\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m }\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Verifier.toMatchObject [as verifyResponse] (\u001b[22m\u001b[2mutilities/verifier.js\u001b[2m:10:29)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat verifyResponse (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/patch-user-id.js\u001b[39m\u001b[0m\u001b[2m:50:22)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPatch User Id › Test N, body, first_name empty.js \u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatchObject\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    \u001b[32m- Expected  - 1\u001b[39m\n    \u001b[31m+ Received  + 1\u001b[39m\n\n    \u001b[2m  Object {\u001b[22m\n    \u001b[2m    \"first_name\": Array [\u001b[22m\n    \u001b[32m-     \"The first name field is required.\",\u001b[39m\n    \u001b[31m+     \"The first name field must be a string.\",\u001b[39m\n    \u001b[2m    ],\u001b[22m\n    \u001b[2m  }\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  8 |\u001b[39m     verifyResponse(actual\u001b[33m,\u001b[39m expected) {\u001b[22m\n\u001b[2m     \u001b[90m  9 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mstatusCode\u001b[33m,\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mstringify(actual\u001b[33m.\u001b[39mbody))\u001b[33m.\u001b[39mtoEqual(expected\u001b[33m.\u001b[39mstatus_code)\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 10 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mbody)\u001b[33m.\u001b[39mtoMatchObject(expected\u001b[33m.\u001b[39mbody)\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 11 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mbody)\u001b[33m.\u001b[39mtoMatchSchema(expected\u001b[33m.\u001b[39mjson_schema)\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m     }\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m }\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Verifier.toMatchObject [as verifyResponse] (\u001b[22m\u001b[2mutilities/verifier.js\u001b[2m:10:29)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat verifyResponse (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/patch-user-id.js\u001b[39m\u001b[0m\u001b[2m:50:22)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPatch User Id › Test N, body, last_name empty.js \u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatchObject\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    \u001b[32m- Expected  - 1\u001b[39m\n    \u001b[31m+ Received  + 1\u001b[39m\n\n    \u001b[2m  Object {\u001b[22m\n    \u001b[2m    \"last_name\": Array [\u001b[22m\n    \u001b[32m-     \"The last name field is required.\",\u001b[39m\n    \u001b[31m+     \"The last name field must be a string.\",\u001b[39m\n    \u001b[2m    ],\u001b[22m\n    \u001b[2m  }\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  8 |\u001b[39m     verifyResponse(actual\u001b[33m,\u001b[39m expected) {\u001b[22m\n\u001b[2m     \u001b[90m  9 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mstatusCode\u001b[33m,\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mstringify(actual\u001b[33m.\u001b[39mbody))\u001b[33m.\u001b[39mtoEqual(expected\u001b[33m.\u001b[39mstatus_code)\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 10 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mbody)\u001b[33m.\u001b[39mtoMatchObject(expected\u001b[33m.\u001b[39mbody)\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 11 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mbody)\u001b[33m.\u001b[39mtoMatchSchema(expected\u001b[33m.\u001b[39mjson_schema)\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m     }\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m }\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Verifier.toMatchObject [as verifyResponse] (\u001b[22m\u001b[2mutilities/verifier.js\u001b[2m:10:29)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat verifyResponse (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/patch-user-id.js\u001b[39m\u001b[0m\u001b[2m:50:22)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPatch User Id › Test N, header token and user id doesn't match.js \u001b[39m\u001b[22m\n\n    Custom message:\n      {\"message\":\"Unauthorized\"}\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m403\u001b[39m\n    Received: \u001b[31m401\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  7 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m  8 |\u001b[39m     verifyResponse(actual\u001b[33m,\u001b[39m expected) {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m  9 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mstatusCode\u001b[33m,\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mstringify(actual\u001b[33m.\u001b[39mbody))\u001b[33m.\u001b[39mtoEqual(expected\u001b[33m.\u001b[39mstatus_code)\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                                                \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mbody)\u001b[33m.\u001b[39mtoMatchObject(expected\u001b[33m.\u001b[39mbody)\u001b[22m\n\u001b[2m     \u001b[90m 11 |\u001b[39m         expect(actual\u001b[33m.\u001b[39mbody)\u001b[33m.\u001b[39mtoMatchSchema(expected\u001b[33m.\u001b[39mjson_schema)\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m     }\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Verifier.toEqual [as verifyResponse] (\u001b[22m\u001b[2mutilities/verifier.js\u001b[2m:9:64)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat verifyResponse (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/patch-user-id.js\u001b[39m\u001b[0m\u001b[2m:50:22)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["Patch User Id"],"duration":3136,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatchObject\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 1\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"address\": Array [\u001b[22m\n\u001b[32m-     \"The address field is required.\",\u001b[39m\n\u001b[31m+     \"The address field must be a string.\",\u001b[39m\n\u001b[2m    ],\u001b[22m\n\u001b[2m  }\u001b[22m\n    at Verifier.toMatchObject [as verifyResponse] (C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia\\utilities\\verifier.js:10:29)\n    at verifyResponse (C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia\\__tests__\\patch-user-id.js:50:22)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Patch User Id Test N, body, address empty.js ","status":"failed","title":"Test N, body, address empty.js "},{"ancestorTitles":["Patch User Id"],"duration":3447,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatchObject\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 1\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"city\": Array [\u001b[22m\n\u001b[32m-     \"The city field is required.\",\u001b[39m\n\u001b[31m+     \"The city field must be a string.\",\u001b[39m\n\u001b[2m    ],\u001b[22m\n\u001b[2m  }\u001b[22m\n    at Verifier.toMatchObject [as verifyResponse] (C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia\\utilities\\verifier.js:10:29)\n    at verifyResponse (C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia\\__tests__\\patch-user-id.js:50:22)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Patch User Id Test N, body, city empty.js ","status":"failed","title":"Test N, body, city empty.js "},{"ancestorTitles":["Patch User Id"],"duration":2661,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatchObject\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 1\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"country\": Array [\u001b[22m\n\u001b[32m-     \"The country field is required.\",\u001b[39m\n\u001b[31m+     \"The country field must be a string.\",\u001b[39m\n\u001b[2m    ],\u001b[22m\n\u001b[2m  }\u001b[22m\n    at Verifier.toMatchObject [as verifyResponse] (C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia\\utilities\\verifier.js:10:29)\n    at verifyResponse (C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia\\__tests__\\patch-user-id.js:50:22)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Patch User Id Test N, body, country empty.js ","status":"failed","title":"Test N, body, country empty.js "},{"ancestorTitles":["Patch User Id"],"duration":2491,"failureMessages":[],"fullName":"Patch User Id Test N, body, dob empty.js ","status":"passed","title":"Test N, body, dob empty.js "},{"ancestorTitles":["Patch User Id"],"duration":2506,"failureMessages":[],"fullName":"Patch User Id Test N, body, email already exist.js ","status":"passed","title":"Test N, body, email already exist.js "},{"ancestorTitles":["Patch User Id"],"duration":3927,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatchObject\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 1\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"email\": Array [\u001b[22m\n\u001b[32m-     \"The email field is required.\",\u001b[39m\n\u001b[31m+     \"The email field must be a string.\",\u001b[39m\n\u001b[2m    ],\u001b[22m\n\u001b[2m  }\u001b[22m\n    at Verifier.toMatchObject [as verifyResponse] (C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia\\utilities\\verifier.js:10:29)\n    at verifyResponse (C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia\\__tests__\\patch-user-id.js:50:22)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Patch User Id Test N, body, email empty.js ","status":"failed","title":"Test N, body, email empty.js "},{"ancestorTitles":["Patch User Id"],"duration":3478,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatchObject\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 1\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"first_name\": Array [\u001b[22m\n\u001b[32m-     \"The first name field is required.\",\u001b[39m\n\u001b[31m+     \"The first name field must be a string.\",\u001b[39m\n\u001b[2m    ],\u001b[22m\n\u001b[2m  }\u001b[22m\n    at Verifier.toMatchObject [as verifyResponse] (C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia\\utilities\\verifier.js:10:29)\n    at verifyResponse (C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia\\__tests__\\patch-user-id.js:50:22)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Patch User Id Test N, body, first_name empty.js ","status":"failed","title":"Test N, body, first_name empty.js "},{"ancestorTitles":["Patch User Id"],"duration":2690,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatchObject\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 1\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"last_name\": Array [\u001b[22m\n\u001b[32m-     \"The last name field is required.\",\u001b[39m\n\u001b[31m+     \"The last name field must be a string.\",\u001b[39m\n\u001b[2m    ],\u001b[22m\n\u001b[2m  }\u001b[22m\n    at Verifier.toMatchObject [as verifyResponse] (C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia\\utilities\\verifier.js:10:29)\n    at verifyResponse (C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia\\__tests__\\patch-user-id.js:50:22)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Patch User Id Test N, body, last_name empty.js ","status":"failed","title":"Test N, body, last_name empty.js "},{"ancestorTitles":["Patch User Id"],"duration":2920,"failureMessages":["Error: Custom message:\n  {\"message\":\"Unauthorized\"}\n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m403\u001b[39m\nReceived: \u001b[31m401\u001b[39m\n    at Verifier.toEqual [as verifyResponse] (C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia\\utilities\\verifier.js:9:64)\n    at verifyResponse (C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia\\__tests__\\patch-user-id.js:50:22)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Patch User Id Test N, header token and user id doesn't match.js ","status":"failed","title":"Test N, header token and user id doesn't match.js "},{"ancestorTitles":["Patch User Id"],"duration":2682,"failureMessages":[],"fullName":"Patch User Id Test N, header, auth invalid.js ","status":"passed","title":"Test N, header, auth invalid.js "},{"ancestorTitles":["Patch User Id"],"duration":3127,"failureMessages":[],"fullName":"Patch User Id Test N, header, endpoint doesn't include id.js ","status":"passed","title":"Test N, header, endpoint doesn't include id.js "},{"ancestorTitles":["Patch User Id"],"duration":2355,"failureMessages":[],"fullName":"Patch User Id Test P edit all success.js ","status":"passed","title":"Test P edit all success.js "},{"ancestorTitles":["Patch User Id"],"duration":2462,"failureMessages":[],"fullName":"Patch User Id Test P edit only address success.js ","status":"passed","title":"Test P edit only address success.js "},{"ancestorTitles":["Patch User Id"],"duration":3352,"failureMessages":[],"fullName":"Patch User Id Test P edit only city success.js ","status":"passed","title":"Test P edit only city success.js "},{"ancestorTitles":["Patch User Id"],"duration":3625,"failureMessages":[],"fullName":"Patch User Id Test P edit only country success.js ","status":"passed","title":"Test P edit only country success.js "},{"ancestorTitles":["Patch User Id"],"duration":2708,"failureMessages":[],"fullName":"Patch User Id Test P edit only email success.js ","status":"passed","title":"Test P edit only email success.js "},{"ancestorTitles":["Patch User Id"],"duration":2591,"failureMessages":[],"fullName":"Patch User Id Test P edit only first_name success.js ","status":"passed","title":"Test P edit only first_name success.js "},{"ancestorTitles":["Patch User Id"],"duration":3597,"failureMessages":[],"fullName":"Patch User Id Test P edit only last_name success.js ","status":"passed","title":"Test P edit only last_name success.js "}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":false,"collectCoverageFrom":[],"coverageDirectory":"C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia\\coverage","coverageProvider":"babel","coverageReporters":["json","text","lcov","clover"],"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"globalSetup":"C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia\\config\\global-setup.js","globalTeardown":"C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia\\config\\global-teardown.js","json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":7,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia\\node_modules\\jest-html-reporters\\index.js",{}]],"rootDir":"C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia","runTestsByPath":false,"seed":-1885536274,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPattern":"","testSequencer":"C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia\\config\\custom-sequencer.js","testTimeout":10000,"updateSnapshot":"new","useStderr":false,"verbose":true,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false},"endTime":1738598214805,"_reporterOptions":{"publicPath":"C:\\Users\\nadila.putri\\Documents\\Test-QA-Engineer-2-SilmiAuliaHasanah\\Test-QA-Engineer2-SilmiAulia","filename":"jest_html_reporters.html","expand":false,"pageTitle":"","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false},"logInfoMapping":{},"attachInfos":{}})